#the config server will check the name of the services so let is stay

spring.application.name=employee-service
spring.config.import=optional:configserver:http://localhost:8888
#actuator endpoint:
#management.endpoints.web.exposure.include=*


#--this are the default values for the rabbitmq properties
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5671
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest



# actuator for circuit breaker :
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#circuit breaker configuration
resilience4j.circuitbreaker.instances.employee-service.registerHealthIndicator=true
#the name we provided the service name in service function
resilience4j.circuitbreaker.instances.employee-service.failureRateThreshold=50
#Failure rate threshold is 50 % 
resilience4j.circuitbreaker.instances.employee-service.minimumNumberOfCalls=5
#Minumum number of calls 5 default is 100.
resilience4j.circuitbreaker.instances.employee-service.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.employee-service.waitDurationInOpenState=5s
#5 seconds 
resilience4j.circuitbreaker.instances.employee-service.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.employee-service.slidingWindowType=COUNT_BASED
#Sliding window type is count or time based
resilience4j.circuitbreaker.instances.employee-service.slidingWindowSize=10
#link https://resilience4j.readme.io/docs/circuitbreaker

# Retry configuration
resilience4j.retry.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.retry.instances.EMPLOYEE-SERVICE.maxAttempts=5
resilience4j.retry.instances.EMPLOYEE-SERVICE.waitDuration=2s





#Properties moved to config server repo

## MySQL configuration (primary)
#spring.datasource.url=jdbc:mysql://localhost:3306/data_schema
#spring.datasource.username=root
#spring.datasource.password=admin
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#
#server.port=8081
#
##jpa/hibernate configuration 
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#
#
##Eureka client / service registry configuration
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka


